[["index.html", "Billboard Top 100 w/ Spotify Chapter 1 Introduction 1.1 Graph TO DOs and also DELETE ME PLS 1.2 Code To Dos: 1.3 Writing To dos", " Billboard Top 100 w/ Spotify Alexandria Guo, Julia Wang, Kevia Qu 2021-12-13 Chapter 1 Introduction 1.1 Graph TO DOs and also DELETE ME PLS Check all plots for title, axis labels, UoM, reasonable axis limits, fontsize, label rotation plot annotations/subheadings/call-outs (parcoord) Title: Y vs X Subheading: (insight if youre inspired) Apply Theme to all (grey 14) 1.2 Code To Dos: Check all libraries are in _common file 1.3 Writing To dos Write analyses/insights for each plot: google docs for copy + pasta Finish Conclusions (compile on google docs 1st) Billboard is an American music and entertainment magazine that originated the Hot 100 chart, which records the one hundred popular songs in the United States (based on sales, radio, and more recently, online streaming) on a weekly basis. Since the charts inception in 1958, the Billboard Hot 100 chart has offered a snapshot of American musical preferences throughout the decades. While Billboard offers a popularity-based view of music, Spotify, a popular music-streaming platform, has developed a database of song characteristics that provide a multi-dimensional description of the songs available in its catalog. Some example song features include danceability, energy, loudness, speechiness, acousticness, instrumentalness, liveness, and valence. Music has always captured the zeitgeist of its time, and using these two data sets, we are interested in exploring various aspects of musical popularity. In particular, there are 3 main questions we aim to answer. First, what musical qualities define a popular song and how have these changed over the decades? The combination of chart data and song features can give us insight into listeners preferences. Also, focusing on more recent music since the 2000s, how have the most popular songs and artists trended? While a few artists and songs seem to dominate recent memory, what do the popular songs weve grown up with look like? Finally, are there particular song characteristics that seem to define specific genres; in particular, what makes k-pop unique? While k-pop has seemingly risen to sudden prominence in the last few years, are there particular features of this genre that provide insight into its viral nature? Using these three themes, we aim to take a deeper look into the most popular music in the US. "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources The data from the weekly Billboard Hot 100 charts and accompanying Spotify song characteristics for the music featured on the charts were taken from TidyTuesday. This data was provided in two separate tables and required additional processing to combine (see Data Transformation for details). The Billboard chart data was scraped from the Billboard website and includes data over 3279 weeks from August 1958 to May 2021. For each of the 100 most popular songs each week, each song title is accompanied by its rank that week, its rank the previous week, the highest rank reached as of that week, total weeks on the chart as of that week, the recording artist name, and how many times the song has re-entered the Top 100 as of that week (instance). To uniquely identify each song, a song_id key was created by concatenating the song title and the performer. While the chart rank data is ordinal categorical, artist name and song title are simply nominal categorical. In total, this dataset was 327,895 rows by 10 columns. The song characteristic data was provided by querying the Spotify API for each of the songs as theyre titled in the Billboard chart data. For each song in this dataset, the artist, numeric descriptive song features defined by Spotify, duration, album name, genre, Spotifys popularity index, as well as Spotify-specific identifiers were provided. The song characteristic are numeric features generated by Spotify and their definitions from the API are listed below. The genre field for most songs listed multiple sub-genres and required additional cleaning to identify a main genre for each song for ease of analysis (see Data Transformation). Aside from the song features and song duration, which are numeric continuous variables. Genre, artist, and album name are all nominal categorical data. In total, this dataset was 29,503 rows by 22 columns. Since artist and song title were duplicated between both datasets, joining both into a single dataset and dropping unique Spotify identifiers (track url and preview url) resulted in a total of 30 columns and 327,895 rows. Table 2.1: A table of the numeric Spotify song features 1 Feature Range Description acousticness 0.0 - 1.0 A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence danceability 0.0 - 1.0 how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. 1.0 is most danceable. energy 0.0 - 1.0 A perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. instrumentalness 0.0 - 1.0 Predicts whether a track contains no vocals. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks. key -1 - 11 Integers map to pitches using standard Pitch CLass Notation. E.g 0 = C, 1 = C#, etc. If no key was detected, the value is -1 loudness -60 - 0 Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live mode 0 or 1 Overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. speechiness 0.0 - 1.0 Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0. liveness 0.0 - 1.0 Detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks tempo 0.0 - 1.0 The overall estimated tempo of a track in beats per minute (BPM) time_signature 0.0 - 1.0 An estimated time signature. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of 3/4, to 7/4 valence 0.0 - 1.0 Describes the musical positiveness conveyed by a track. Tracks with high valence (closer to 1.0) sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry). During the process of joining the two data sets and subsequent analysis, we noticed several problems. The primary issue was that there were some duplicate song instances in the Spotify dataset where the same song from a given artist was listed twice with some slight differences in the song characteristics. There were 117 such cases out of the 29,500 songs listed and we dropped one of the duplicates; this could have caused issues in our analysis if the instance dropped was a deprecated version of the song. During our analysis, we also noticed some incorrect genre labels in the Spotify dataset, notably where some songs were labeled with genres that did not yet exist when the song was released, likely due to Spotifys retroactive labelling of its music. Also, each song was associated with multiple genres since Spotify only categorizes genre on the album-level. To simplify our analysis, a representative genre had to be chosen for each song; doing so may have led to some reduced granularity in the data. https://developer.spotify.com/documentation/web-api/reference/#/operations/get-several-audio-features "],["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation Our data was provided as two separate csvs, one for the Billboard Top 100 rankings, and the other for the Spotify audio features. The kind folks at TidyTuesday already created a song_id column in both csvs, which was the concatenation of the song name and the artist. We found that using Python to do our data merging and transformation to be the most seamless. The Jupyter Notebook with our code can be found here. To transform the Billboard data, we noticed that there were only NAs in the previous week position column, and that it corresponded to when the song first appeared on the charts. Instead of keeping them as nulls, to be slightly more descriptive, we null-filled those instances with debut. To merge the two datasets, I left-joined on the Billboard dataset, in order to maintain all of our Billboard data. During the initial join, we noticed the data was growing in size, which was due to the duplicate song instances in the Spotify dataset. The data was de-duplicated based on the song_id. Another thing to note is that we did not separate out artists that were featured on a song or if there were multiple artists listed on a song. We treated each combination of artists as a unique artist. Another issue with featured artists is that often the Spotify data for that song would be missing. We believe that it is due to Spotify listing the song/artist in a different way than Billboard, and because we are joining on Artist and Song as our id, this could have caused issues with looking up Spotify data. As a result the Spotify data (genre, musicality features, etc.) for many songs with features is missing. After merging, we noticed that the Spotify genre feature was actually a list of genres that Spotify associated with the song. Additionally, there were hundreds of unique genres since Spotify is very detailed in their description of pop (dance pop, post-teen pop, space age pop, brill building pop, pop rap to name a few). To deal with this, we decided on distilling the list to a single representative genre. We went through the list of genres, and matched on a common list of genres such as rap, country, pop, k-pop, jazz, and more. If the song did not have any of those genres, it was assigned other. Additionally, since many songs had pop as a genre, we decided to match on any of the other genres first, before resorting to pop. As a result, this might deflate the number of songs labeled as pop. Ideally, we would have been able to count all of the instances of each genre, and could be a worthwhile future improvement. To make our plots generally more readable, we decided to filter down our dataset to songs after the 2000s, as they are more recent and relevant. The exceptions are the plots that focus on a meta-analysis by each decade, as well as for our interactive plot; in order to make the dataset a manageable size to be shared online, we decided to only use songs between 2011-2021. "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values In our exploration of the dataset, we note that the spotify_track_id (trk) can uniquely identify songs on Spotify. Whenever spotify_track_id is missing, all of the audio features are also missing, as in Patterns 3 and 4  we hypothesize that this is the case because Spotify metadata and other measures cannot be accessed without this id. Pattern 10 does not follow this trend, but only occurs in 4 rows total in the entire dataset. We also see that missing only spotify_track_preview_url (url) is the second most common missing pattern, at around 34-35%. It is also generally missing from around 50% of our data points; however, this feature is just a link to a 30 second preview of the song. We likely will not find this pattern particularly impactful, as this feature will probably not be utilized in our project. We believe this is feature is MCAR, Missing Completely At Random. Additionally, we see that the features song_id (id), artist (art), and song (name) do not have any missing data. We believe this is because song_id is a unique identifier that is the concatenation of the artist and song columns, and if both song and artist data were missing, the entire row would also be missing because it would be impossible to find the right song. "],["results.html", "Chapter 5 Results 5.1 What features define song popularity through the decades? 5.2 What artists and songs have trended since 2000? 5.3 What defines a genre and what makes k-pop so unique?", " Chapter 5 Results 5.1 What features define song popularity through the decades? Songs that reached a peak position in the top 5 were pulled from the charts and their song features were plotted. Faceting the data by decade (the 1950s were omitted since it was an incomplete decade, however the 2020s were kept since it is more recent and relevant), there are notably similar distributions in the song features regardless of the decade. One of the features that does see a shift in its distribution is valence; while it skews more positive in the 60s - 80s, there is a shift left from the 90s to the 2010s. There is also a change in how danceable a song is; while there is a larger spread in the 1970s, there is a noticeable shift of popular songs skewing toward more danceable from the 2000s onwards. Surprisingly, there are many similarities between the trends of popular songs in the 1960s vs the 2020s. There is generally a positive correlation between danceability and energy in both decades. Notably, the main changes are seen in speechiness; there is an opposite correlation between speechiness and loudness or speechiness and accousticness in the 2010s compared to the 1960s. Again, data from the 1950s was omitted since it was an incomplete decade (though data from the 2020s was kept since it is more recent and relevant). Notably, there is a shift (and creation) of some genres becoming more or less popular during certain decades. For example, its evident that Blues were popular in the 19050s but have progressively become less popular in subsequent decades whereas Country became more popular, peaking in the 70s before losing relative popularity. Some genres such as edm and kpop didnt even exist in earlier decades, and did not show any popularity until the last 10 years. 5.2 What artists and songs have trended since 2000? Insight: Insight: Insight: Insight: 5.3 What defines a genre and what makes k-pop so unique? A perennial sentiment throughout the generationsin the United States, at leastis that the pop music of today is less lyrically complex 2 3, less auditorily diverse 4, and just generally worse. Looking at the full dataset of unique songs that have charted in the Top 100 from 1958 to 2021, however, we notice an interesting trend where the total number of such songs briefly increases from the charts creation up until 1966 and then declines until a low point in 2001. From there, the number of songs rapidly increases again, up until the present. Based on this plot, we might infer that quality aside, modern pop music is seeing a boom in production today. We plot a count of unique songs based on both the first week charted and last week charted, to investigate if the above effect could be attributed to songs getting significant replay value past their initial release. The two ways of rounding a songs year yield almost identical lines, however, which seems to disprove this theory. This should also be evident from the vast majority of songs charting only once. An alternative explanation for the increase comes from the history of the Billboard 100 5, where 1998 marked a shift from the Hot 100 being a singles chart to a songs chart, broadening the pool of eligible songs. Further increases could also be attributed to the Billboard gradually incorporating digital sales and streaming numbers as well in 2005 and 2007 respectively, adapting to modern ways of music consumption. Perhaps this change caused the number of songs in the Top 100 to increase due to the new policies better capturing virality and what is often perceived as the ever-decreasing life cycle of what is trending. As later analyses will show though, some of the longest-lasting songs in the charts have also been born in the most recent decade. K-pop has been making a splash internationally in recent years, charting on the U.S. Billboard 100 for the first time in 2009 with Nobody by the Wonder Girls, and BTS maintaining a consistent presence since 2017. To some critics though, the genre is defined by its industry of boy/girl-group creation and performance components more than its unique sound, further compounded by the work of Western producers in its field. Here, we use principal component analysis to analyze the auditory qualities of songs: specifically acousticness, danceability, energy, liveness, loudness, speechiness, tempo, and valence. These variables were chosen because they are continuous, with values reasonably distributed among all songs in the dataset. We also restrict the songs to those first charting after 2000, to only compare k-pop songs popular in the U.S. to their contemporaries. From this chart, we can see that while the distribution of songs is mostly circular, the largest spread is along the acousticness vector. This is also somewhat anticorrelated to energy, and tempo to danceability. Acousticness and energy, then, are also more uncorrelated with tempo and danceability, or valence to loudness. All of these associations make intuitive sense, and are corroborated by Spotifys documentation. The k-pop songs are all found on the left half of the plot, with the exception of Blue &amp; Grey by BTS. This marks k-pop hits in the U.S. as generally higher in tempo, liveness, loudness, and energy than the general American pop population. Despite a hallmark of the genre being dance accompaniments to every song, none of them falls particularly high along the danceability axishowever, this may be due to many of these songs also being high in tempo and bucking the general anticorrelation trend. With consideration to Blue &amp; Grey as an outlier, it is an interesting example of how regionally-defined genres can be limiting. Within k-pop, in addition to dance anthems, slower and more stripped-down ballads are also another popular (if slightly less common) form of release, usually highlighting the vocal talents of specific group members. In this regard, Blue &amp; Grey is unmistakably k-pop, but also deserving of a more accurate label that better captures the actual aural qualities of the song. To further analyze this data, we subset the general population of pop songs to only those peaking at rank 1 on Top 100 and reduce the range of permissible debut years to 2015 and onwards, due to the majority of U.S Billboard-charting k-pop songs being released in this range. Within this reduced dataset, we see more clearly many of the same relationships between audio features as first observed in the previous biplot. Additionally, we can observe the clustering of songs towards the minimums of speechiness and liveness, hence their smaller rotation vectors and reduced power in explaining variance. The k-pop hits maintain similar patterns across the parallel coordinates plot, with the most variance in danceability. K-pop is also slightly over-represented in the upper ends of speechiness, which corresponds to the commonality of a rap section in many k-pop songs, due to how their groups are structured. https://pudding.cool/projects/vocabulary/index.html https://pudding.cool/2017/05/song-repetition/ https://pudding.cool/2018/05/similarity/ https://www.npr.org/sections/therecord/2013/08/16/207879695/how-the-hot-100-became-americas-hit-barometer "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component You can also access the plot on VizHub: https://vizhub.com/jw4169/20ca79535ad2415383c09787459a5d22?edit=files&amp;file=index.html One thing that we discovered from our interactive plot was that many songs seem to enter the chart at the same time. The top songs often stay pretty horizontal across the month, which shows that very popular songs remain at the top for a while. We know the tooltips can get cut off on the right side if the song name or artist are too long. However, we ran out of time to update everything to use a right margin, and there is an easy workaround by just hovering over the line to the left of the graph. There are a couple instances where songs with the name made it on charts separately under different artists. As a result, there is a bit of wonkiness where you can see a vertical line between data points for Its Beginning to Look a Lot Like Christmas in Dec 2020, because the song charted both with Michael Buble as well as with Perry Como And The Fontane Sisters With Mitchell Ayres And His Orchestra, so I think we might have had issues with our data merging here. Credit: Jane Pongs https://bl.ocks.org/officeofjane/47d2b0bfeecfcb41d2212d06d095c763 for the date slider framework and Yong Lees https://bl.ocks.org/Qizly/8f6ba236b79d9bb03a80 for the tooltip format. "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion Some limitations in the data provided such as missing song features and genres could be an interesting direction for future work, such as querying the Spotify API to fill in the missing data. Additionally, for plots that used genre, it could be interesting to play around with the genre assignment in initial data cleaning to see if there are other insights that we might have missed or use another database for assigning a single genre to a song. Finally, with so many dimensions to our dataset, there are definitely many other questions that are left unanswered with our exploration. If we had the time, we would have liked to explore derived metrics such as changes in position on the charts. Some lessons that weve learned are to make sure to work piece by piece, and that changes to the Bookdown work incrementally, instead of trying to merge everything all at once. The same lesson can be applied to the interactive plot. Get started early, and explore your data as you go. Make sure that plots make sense logically, and deep dive into the data when it doesnt (using Excel is a great way to verify what youre doing in R or d3). It also helps to come up with the question that your plot is trying to answer first and sketch out what the visualization might look like, before making a plot. Overall, our team had a lot of fun exploring and analyzing the Billboard Top 100 and the Spotify audio features datasets, and look forward to future analyses as well. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
